1.Identify the interface to test
The testme program is looping through a series of nine statements, and the state becomes nine, the last statement checks if a string contains 'reset' with a null terminator. 
In order to get the loop to exit with 'error' message, the state needs to be 9 and the s string needs to be "reset\0". 
I needed to create a random character generator that makes the state 9, and the next step was creating a random string generator.

2. Write code to generate random inputs and to check behavior on random inputs
char inputChar(): First time, I restricted the input characters in a range from 65(A) to 122(z) in ASCII table. 
Next the function generates random int in the range that I set it up earlier. At the end, to return the char type, I converted a randomly generated int to a char type. However it never hit state 9, because the character [ never can be generated. I changed the input characters in a range from 32(space) to 125(}) which includes the special characters in main function to hit the each state. 
char *inputString(): I restricted the input characters in a range from 97(a) to 122(z) in ASCII table. I set up variable to have a c string with maximum 5 chars plus NULL terminator. The for-loop iterates 5 times to generate 5 random characters in the range that I set earlier. This function returns a string composed of concatenating randomly chosen characters.

